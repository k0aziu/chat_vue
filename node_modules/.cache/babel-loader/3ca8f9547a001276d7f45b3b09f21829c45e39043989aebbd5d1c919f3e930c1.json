{"ast":null,"code":"import { createVNode as _createVNode, mergeProps as _mergeProps, resolveDirective as _resolveDirective } from \"vue\";\n// Styles\nimport \"./VCheckbox.css\";\n\n// Components\nimport { filterInputProps, makeVInputProps, VInput } from \"../VInput/VInput.mjs\";\nimport { makeVCheckboxBtnProps, VCheckboxBtn } from \"./VCheckboxBtn.mjs\"; // Composables\nimport { useFocus } from \"../../composables/focus.mjs\"; // Utilities\nimport { computed } from 'vue';\nimport { filterInputAttrs, genericComponent, getUid, useRender } from \"../../util/index.mjs\"; // Types\nexport const VCheckbox = genericComponent()({\n  name: 'VCheckbox',\n  inheritAttrs: false,\n  props: {\n    ...makeVInputProps(),\n    ...makeVCheckboxBtnProps()\n  },\n  emits: {\n    'update:focused': focused => true\n  },\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const {\n      isFocused,\n      focus,\n      blur\n    } = useFocus(props);\n    const uid = getUid();\n    const id = computed(() => props.id || `checkbox-${uid}`);\n    useRender(() => {\n      const [inputAttrs, controlAttrs] = filterInputAttrs(attrs);\n      const [inputProps, _1] = filterInputProps(props);\n      const [checkboxProps, _2] = VCheckboxBtn.filterProps(props);\n      return _createVNode(VInput, _mergeProps({\n        \"class\": \"v-checkbox\"\n      }, inputAttrs, inputProps, {\n        \"id\": id.value,\n        \"focused\": isFocused.value\n      }), {\n        ...slots,\n        default: _ref2 => {\n          let {\n            id,\n            messagesId,\n            isDisabled,\n            isReadonly\n          } = _ref2;\n          return _createVNode(VCheckboxBtn, _mergeProps(checkboxProps, {\n            \"id\": id.value,\n            \"aria-describedby\": messagesId.value,\n            \"disabled\": isDisabled.value,\n            \"readonly\": isReadonly.value\n          }, controlAttrs, {\n            \"onFocus\": focus,\n            \"onBlur\": blur\n          }), slots);\n        }\n      });\n    });\n    return {};\n  }\n});","map":{"version":3,"names":["filterInputProps","makeVInputProps","VInput","makeVCheckboxBtnProps","VCheckboxBtn","useFocus","computed","filterInputAttrs","genericComponent","getUid","useRender","VCheckbox","name","inheritAttrs","props","emits","focused","setup","_ref","attrs","slots","isFocused","focus","blur","uid","id","inputAttrs","controlAttrs","inputProps","_1","checkboxProps","_2","filterProps","_createVNode","_mergeProps","value","default","_ref2","messagesId","isDisabled","isReadonly"],"sources":["../../../src/components/VCheckbox/VCheckbox.tsx"],"sourcesContent":["// Styles\nimport './VCheckbox.sass'\n\n// Components\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport { filterInputProps, makeVInputProps, VInput } from '@/components/VInput/VInput'\nimport { makeVCheckboxBtnProps, VCheckboxBtn } from './VCheckboxBtn'\n\n// Composables\nimport { useFocus } from '@/composables/focus'\n\n// Utilities\nimport { computed } from 'vue'\nimport { filterInputAttrs, genericComponent, getUid, useRender } from '@/util'\n\n// Types\nimport type { VSelectionControlSlots } from '../VSelectionControl/VSelectionControl'\n\nexport type VCheckboxSlots = VInputSlots & VSelectionControlSlots\n\nexport const VCheckbox = genericComponent<VCheckboxSlots>()({\n  name: 'VCheckbox',\n\n  inheritAttrs: false,\n\n  props: {\n    ...makeVInputProps(),\n    ...makeVCheckboxBtnProps(),\n  },\n\n  emits: {\n    'update:focused': (focused: boolean) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const { isFocused, focus, blur } = useFocus(props)\n\n    const uid = getUid()\n    const id = computed(() => props.id || `checkbox-${uid}`)\n\n    useRender(() => {\n      const [inputAttrs, controlAttrs] = filterInputAttrs(attrs)\n      const [inputProps, _1] = filterInputProps(props)\n      const [checkboxProps, _2] = VCheckboxBtn.filterProps(props)\n\n      return (\n        <VInput\n          class=\"v-checkbox\"\n          { ...inputAttrs }\n          { ...inputProps }\n          id={ id.value }\n          focused={ isFocused.value }\n        >\n          {{\n            ...slots,\n            default: ({\n              id,\n              messagesId,\n              isDisabled,\n              isReadonly,\n            }) => (\n              <VCheckboxBtn\n                { ...checkboxProps }\n                id={ id.value }\n                aria-describedby={ messagesId.value }\n                disabled={ isDisabled.value }\n                readonly={ isReadonly.value }\n                { ...controlAttrs }\n                onFocus={ focus }\n                onBlur={ blur }\n                v-slots={ slots }\n              />\n            ),\n          }}\n        </VInput>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VCheckbox = InstanceType<typeof VCheckbox>\n"],"mappings":";AAAA;AACA;;AAEA;AAAA,SAESA,gBAAgB,EAAEC,eAAe,EAAEC,MAAM;AAAA,SACzCC,qBAAqB,EAAEC,YAAY,8BAE5C;AAAA,SACSC,QAAQ,uCAEjB;AACA,SAASC,QAAQ,QAAQ,KAAK;AAAA,SACrBC,gBAAgB,EAAEC,gBAAgB,EAAEC,MAAM,EAAEC,SAAS,gCAE9D;AAKA,OAAO,MAAMC,SAAS,GAAGH,gBAAgB,EAAkB,CAAC;EAC1DI,IAAI,EAAE,WAAW;EAEjBC,YAAY,EAAE,KAAK;EAEnBC,KAAK,EAAE;IACL,GAAGb,eAAe,EAAE;IACpB,GAAGE,qBAAqB;EAC1B,CAAC;EAEDY,KAAK,EAAE;IACL,gBAAgB,EAAGC,OAAgB,IAAK;EAC1C,CAAC;EAEDC,KAAKA,CAAEH,KAAK,EAAAI,IAAA,EAAoB;IAAA,IAAlB;MAAEC,KAAK;MAAEC;IAAM,CAAC,GAAAF,IAAA;IAC5B,MAAM;MAAEG,SAAS;MAAEC,KAAK;MAAEC;IAAK,CAAC,GAAGlB,QAAQ,CAACS,KAAK,CAAC;IAElD,MAAMU,GAAG,GAAGf,MAAM,EAAE;IACpB,MAAMgB,EAAE,GAAGnB,QAAQ,CAAC,MAAMQ,KAAK,CAACW,EAAE,IAAK,YAAWD,GAAI,EAAC,CAAC;IAExDd,SAAS,CAAC,MAAM;MACd,MAAM,CAACgB,UAAU,EAAEC,YAAY,CAAC,GAAGpB,gBAAgB,CAACY,KAAK,CAAC;MAC1D,MAAM,CAACS,UAAU,EAAEC,EAAE,CAAC,GAAG7B,gBAAgB,CAACc,KAAK,CAAC;MAChD,MAAM,CAACgB,aAAa,EAAEC,EAAE,CAAC,GAAG3B,YAAY,CAAC4B,WAAW,CAAClB,KAAK,CAAC;MAE3D,OAAAmB,YAAA,CAAA/B,MAAA,EAAAgC,WAAA;QAAA,SAEU;MAAY,GACbR,UAAU,EACVE,UAAU;QAAA,MACVH,EAAE,CAACU,KAAK;QAAA,WACHd,SAAS,CAACc;MAAK;QAGvB,GAAGf,KAAK;QACRgB,OAAO,EAAEC,KAAA;UAAA,IAAC;YACRZ,EAAE;YACFa,UAAU;YACVC,UAAU;YACVC;UACF,CAAC,GAAAH,KAAA;UAAA,OAAAJ,YAAA,CAAA7B,YAAA,EAAA8B,WAAA,CAEQJ,aAAa;YAAA,MACbL,EAAE,CAACU,KAAK;YAAA,oBACMG,UAAU,CAACH,KAAK;YAAA,YACxBI,UAAU,CAACJ,KAAK;YAAA,YAChBK,UAAU,CAACL;UAAK,GACtBR,YAAY;YAAA,WACPL,KAAK;YAAA,UACNC;UAAI,IACHH,KAAK;QAAA;MAElB;IAIT,CAAC,CAAC;IAEF,OAAO,CAAC,CAAC;EACX;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}