{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, {\n    style: {\n      \"height\": \"100%\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_row, {\n      \"scroll-target\": _ctx.onScroll,\n      style: {\n        \"margin-bottom\": \"20px\"\n      }\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.messages, message => {\n        return _openBlock(), _createBlock(_component_v_card, {\n          onClick: $options.scrollBottom,\n          key: message.id,\n          title: message.name,\n          variant: \"tonal\",\n          text: message.message,\n          style: {\n            \"height\": \"100px\",\n            \"width\": \"100%\",\n            \"margin\": \"10px 10px 10px 10px\"\n          }\n        }, null, 8 /* PROPS */, [\"onClick\", \"title\", \"text\"]);\n      }), 128 /* KEYED_FRAGMENT */))]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"scroll-target\"]), _createVNode(_component_v_text_field, {\n      label: \"Napisz wiadomość...\",\n      modelValue: $data.message,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.message = $event),\n      \"append-icon\": $data.message ? 'mdi-send' : 'mdi-emoticon',\n      variant: \"filled\",\n      \"clear-icon\": \"mdi-close-circle\",\n      clearable: \"\",\n      type: \"text\",\n      \"onClick:append\": $options.sendMessage,\n      \"onClick:prepend\": $options.changeIcon,\n      \"onClick:clear\": $options.clearMessage\n    }, null, 8 /* PROPS */, [\"modelValue\", \"append-icon\", \"onClick:append\", \"onClick:prepend\", \"onClick:clear\"])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_container","style","_createVNode","_component_v_row","_ctx","onScroll","_createElementBlock","_Fragment","_renderList","$data","messages","message","_component_v_card","onClick","$options","scrollBottom","key","id","title","name","variant","text","_component_v_text_field","label","$event","clearable","type","sendMessage","changeIcon","clearMessage"],"sources":["C:\\Users\\micha\\Desktop\\kazcom\\src\\components\\MainChat.vue"],"sourcesContent":["<template>\r\n  <v-container  style=\"height: 100%;\">\r\n    <v-row :scroll-target=\"onScroll\" style=\"margin-bottom: 20px;\">\r\n      <v-card @click=\"scrollBottom\" v-for=\"message in messages\" :key=\"message.id\" :title=\"message.name\" variant=\"tonal\"\r\n        :text=\"message.message\" style=\"height: 100px; width: 100%; margin: 10px 10px 10px 10px;\"></v-card>\r\n      </v-row>\r\n      <v-text-field label=\"Napisz wiadomość...\" v-model=\"message\" :append-icon=\"message ? 'mdi-send' : 'mdi-emoticon'\"\r\n        variant=\"filled\" clear-icon=\"mdi-close-circle\" clearable type=\"text\" @click:append=\"sendMessage\"\r\n        @click:prepend=\"changeIcon\" @click:clear=\"clearMessage\"></v-text-field>\r\n      </v-container>\r\n</template>\r\n\r\n<script>\r\nimport io from 'socket.io-client';\r\n\r\nexport default {\r\n  name: 'MainChat',\r\n  data() {\r\n    return {\r\n      bottom: '',\r\n      message: '',\r\n      connection: null,\r\n      socket: io.connect(),\r\n      messages: [\r\n      {\r\n          id: 1,\r\n          name: \"kaziu\",\r\n          message: \"jajco\"\r\n        },{\r\n          id: 1,\r\n          name: \"kaziu\",\r\n          message: \"jajco\"\r\n        },\r\n      ]\r\n    }\r\n  }, methods: {\r\n    scrollBottom() {\r\n      this.bottom = document.body.scrollHeight\r\n      window.scrollTo(0, this.bottom);\r\n    },\r\n    sendMessage() {\r\n      if (this.message === '') return\r\n      this.socket.emit('sendMessage', { message: this.message, name: localStorage.getItem('user_name') });\r\n      this.resetIcon()\r\n      this.clearMessage()\r\n    },\r\n    clearMessage() {\r\n      this.message = ''\r\n    },\r\n    resetIcon() {\r\n      this.iconIndex = 0\r\n    },\r\n    changeIcon() {\r\n      this.iconIndex === this.icons.length - 1 ? this.iconIndex = 0 : this.iconIndex++\r\n    },\r\n  },\r\n  created() {\r\n    this.socket.on('getMessage', function (data) {\r\n      this.messages.push(data)\r\n      console.log(data)\r\n      console.log(this.messages)\r\n      this.scrollBottom()\r\n    }\r\n    )\r\n  }\r\n}\r\n</script>"],"mappings":";;;;;;uBACEA,YAAA,CAQkBC,sBAAA;IARJC,KAAqB,EAArB;MAAA;IAAA;EAAqB;sBACjC,MAGU,CAHVC,YAAA,CAGUC,gBAAA;MAHF,eAAa,EAAEC,IAAA,CAAAC,QAAQ;MAAEJ,KAA4B,EAA5B;QAAA;MAAA;;wBACD,MAA2B,E,kBAAzDK,mBAAA,CACoGC,SAAA,QAAAC,WAAA,CADpDC,KAAA,CAAAC,QAAQ,EAAnBC,OAAO;6BAA5CZ,YAAA,CACoGa,iBAAA;UAD3FC,OAAK,EAAEC,QAAA,CAAAC,YAAY;UAA+BC,GAAG,EAAEL,OAAO,CAACM,EAAE;UAAGC,KAAK,EAAEP,OAAO,CAACQ,IAAI;UAAEC,OAAO,EAAC,OAAO;UAC9GC,IAAI,EAAEV,OAAO,CAACA,OAAO;UAAEV,KAAgE,EAAhE;YAAA;YAAA;YAAA;UAAA;;;;;0CAE1BC,YAAA,CAEyEoB,uBAAA;MAF3DC,KAAK,EAAC,qBAAqB;kBAAUd,KAAA,CAAAE,OAAO;iEAAPF,KAAA,CAAAE,OAAO,GAAAa,MAAA;MAAG,aAAW,EAAEf,KAAA,CAAAE,OAAO;MAC/ES,OAAO,EAAC,QAAQ;MAAC,YAAU,EAAC,kBAAkB;MAACK,SAAS,EAAT,EAAS;MAACC,IAAI,EAAC,MAAM;MAAE,gBAAY,EAAEZ,QAAA,CAAAa,WAAW;MAC9F,iBAAa,EAAEb,QAAA,CAAAc,UAAU;MAAG,eAAW,EAAEd,QAAA,CAAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}