{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, null, {\n    default: _withCtx(() => [_createVNode(_component_v_row, {\n      \"scroll-target\": _ctx.onScroll,\n      style: {\n        \"margin-bottom\": \"20px\"\n      }\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.messages, message => {\n        return _openBlock(), _createBlock(_component_v_card, {\n          onClick: $options.scrollBottom,\n          key: message.id,\n          title: message.name,\n          variant: \"tonal\",\n          text: message.message,\n          style: {\n            \"width\": \"100%\",\n            \"margin\": \"10px 10px 10px 10px\"\n          }\n        }, null, 8, [\"onClick\", \"title\", \"text\"]);\n      }), 128))]),\n      _: 1\n    }, 8, [\"scroll-target\"]), _createVNode(_component_v_text_field, {\n      label: \"Label\",\n      \"append-icon\": _ctx.message ? 'mdi-send' : 'mdi-emoticon',\n      \"onClick:append\": $options.scrollBottom,\n      variant: \"solo\",\n      modelValue: _ctx.message,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.message = $event)\n    }, null, 8, [\"append-icon\", \"onClick:append\", \"modelValue\"])]),\n    _: 1\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_container","_createVNode","_component_v_row","_ctx","onScroll","style","_createElementBlock","_Fragment","_renderList","$data","messages","message","_component_v_card","onClick","$options","scrollBottom","key","id","title","name","variant","text","_component_v_text_field","label","$event"],"sources":["C:\\Users\\micha\\Desktop\\kazcom\\src\\components\\MainChat.vue"],"sourcesContent":["<template>\r\n    <v-container>\r\n      <v-row :scroll-target=\"onScroll\" style=\"margin-bottom: 20px;\">\r\n        <v-card @click=\"scrollBottom\" v-for=\"message in messages\" :key=\"message.id\" :title=\"message.name\" variant=\"tonal\"\r\n          :text=\"message.message\" style=\"width: 100%; margin: 10px 10px 10px 10px;\"></v-card>\r\n      </v-row>\r\n      <v-text-field label=\"Label\" :append-icon=\"message ? 'mdi-send' : 'mdi-emoticon'\" @click:append=\"scrollBottom\" variant=\"solo\" v-model=\"message\"></v-text-field>\r\n    </v-container>\r\n</template>\r\n\r\n<script>\r\n// import io from 'socket.io-client';\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'MainChat',\r\n    data() {\r\n      return {\r\n        bottom: '',\r\n        // message: '',\r\n        connection: null,\r\n        messages: [\r\n          // { id: 0, name: 'kaziu', message: 'coś' },\r\n          // { id: 1, name: 'kaziu', message: 'coś innego' },\r\n          // { id: 2, name: 'mizet', message: 'ej mizcom jest przecież lepszy!' },\r\n          // { id: 3, name: 'kaziu', message: 'wcale nie!' }\r\n        ]\r\n      }\r\n    },methods: {\r\n  scrollBottom() {\r\n    this.bottom = document.body.scrollHeight\r\n    window.scrollTo(0, this.bottom);\r\n  },\r\n  // sendMessage: (message) => {\r\n  //   console.log(this.connection)\r\n  //   this.connection.send(message)\r\n  // }\r\n},\r\ncreated() {\r\n  axios.post('/chat_history', {\r\n      headers: { 'Content-Type': 'application/json' }\r\n  })\r\n  .then(response => {\r\n    const obj = JSON.parse(response.config.data)\r\n    obj.forEach(element => {\r\n      this.messages.push(element)\r\n    });      \r\n\r\n    })\r\n\r\n  // this.connection = new WebSocket(\"wss://echo.websocket.org\")\r\n  // this.connection.onopen = (e) => {\r\n    // console.log(e)\r\n  // }\r\n  // this.connection.onmessage = (e) => {\r\n    // console.log(e)\r\n  // }\r\n}\r\n}\r\n</script>"],"mappings":";;;;;;uBACIA,YAAA,CAMcC,sBAAA;sBALZ,MAGQ,CAHRC,YAAA,CAGQC,gBAAA;MAHA,eAAa,EAAEC,IAAA,CAAAC,QAAQ;MAAEC,KAA4B,EAA5B;QAAA;MAAA;;wBACD,MAA2B,E,kBAAzDC,mBAAA,CACqFC,SAAA,QAAAC,WAAA,CADrCC,KAAA,CAAAC,QAAQ,EAAnBC,OAAO;6BAA5CZ,YAAA,CACqFa,iBAAA;UAD5EC,OAAK,EAAEC,QAAA,CAAAC,YAAY;UAA+BC,GAAG,EAAEL,OAAO,CAACM,EAAE;UAAGC,KAAK,EAAEP,OAAO,CAACQ,IAAI;UAAEC,OAAO,EAAC,OAAO;UAC9GC,IAAI,EAAEV,OAAO,CAACA,OAAO;UAAEN,KAAiD,EAAjD;YAAA;YAAA;UAAA;;;;8BAE5BJ,YAAA,CAA8JqB,uBAAA;MAAhJC,KAAK,EAAC,OAAO;MAAE,aAAW,EAAEpB,IAAA,CAAAQ,OAAO;MAAiC,gBAAY,EAAEG,QAAA,CAAAC,YAAY;MAAEK,OAAO,EAAC,MAAM;kBAAUjB,IAAA,CAAAQ,OAAO;iEAAPR,IAAA,CAAAQ,OAAO,GAAAa,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}